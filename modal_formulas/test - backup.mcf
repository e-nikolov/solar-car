%%%% 1 %%%%     %true
    [true*]<true*>true   %true

%%%% 2 %%%%     %true
    %  &&   [true*.pressOff] mu X. [!conMotorToBattery(0)] X        %true   
    %  && [true*.pressOff] mu X. [!conBatteryToMotor(0)] X          %true
    %  && [true*.pressOff] mu X. [!conSolarPanelToMotor(0)] X       %true
    %  && [true*.pressOff] mu X. [!conSolarPanelToBattery(0)] X %true
    %  && (forall  m: Nat . val(m>0&&m<=5)=>   ([true*.pressOff. (!pressOn)*. (conMotorToBattery(m)+conBatteryToMotor(m)+conSolarPanelToMotor(m)+conSolarPanelToBattery(m))]false)) %true                 

%%%% 3 %%%%     %true
    % && [true*.pressBrake] mu X. [!conBatteryToMotor(0)] X     %true
    % && [true*.pressBrake] mu X. [!conSolarPanelToMotor(0)] X  %true
    % && (forall m: Nat . val(m > 0 && m <= 5) => ([true* . pressBrake . (!releaseBrake)* . (conBatteryToMotor(m) + conSolarPanelToMotor(m))] false))   %true

%%%% 4 %%%%

    % && [true* . (getBatteryLevel(Empty) || getBatteryLevel(Medium) && getBatteryTemp(Normal)) . !(getBatteryLevel(Full)&&getBatteryTemp(Overheating))* . pressBrake] mu X . [!(forall p: Nat. val(p>=0&&p<=5)=> (conMotorToBattery(p)))] X        % false

%%%% 5 %%%%     %false
    %  && [true*. (getBatteryTemp(Overheating)||getBatteryLevel(Full))] mu X. [!(conSolarPanelToBattery(0)) && !(conMotorToBattery(0))] X   %true
    %  && (forall m: Nat. val(m>0&&m<=5)=> ([true*. (getBatteryTemp(Overheating)||getBatteryLevel(Full)). !(getBatteryLevel(Empty)||getBatteryLevel(Medium)&&getBatteryTemp(Normal))*. (conSolarPanelToBattery(m)+conMotorToBattery(m))]false)) %false

%%%% 6 %%%%   %true
     % && (forall m: Nat. val(m>0&&m<=5)=> ([!(conBatteryToMotor(0))*. conSolarPanelToBattery(m)]false))    %true
     % && (forall n: Nat. val(n>0&&n<=5)=> ([!(conBatteryToMotor(0))*. conMotorToBattery(n)]false)) %true
     % && (forall m: Nat. val(m>0&&m<=5)=> ([!(conSolarPanelToBattery(0))*. conBatteryToMotor(m)]false)) %true
     % && (forall m: Nat. val(m>0&&m<=5)=> ([!(conMotorToBattery(0))*. conBatteryToMotor(m)]false)) %true
     % && (forall m: Nat. val(m>0&&m<=5)=> ([!(conMotorToBattery(0))*. conSolarPanelToMotor(m)]false)) %true    
     % && (forall n: Nat. val(n>0&&n<=5)=> ([!(conMotorToBattery(0))*. conBatteryToMotor(n)]false)) %true
     % && (forall m: Nat. val(m>0&&m<=5)=> ([!(conSolarPanelToMotor(0))*. conMotorToBattery(m)]false))  %true
     % && (forall m: Nat. val(m>0&&m<=5)=> ([!(conBatteryToMotor(0))*. conMotorToBattery(m)]false)) %true

%%%% 7 %%%%   %false
    % && [true*. getBatteryLevel(Empty)] mu X. [!(conBatteryToMotor(0))] X  %false
    % && (forall m : Nat. val(m>0&&m<=5)=> ([true*. conBatteryToMotor(m). !(getBatteryLevel(Empty))*. (getBatteryLevel(Medium) || getBatteryLevel(Full))]false))    %false
    % && [true*. getSolarPower(0)] mu X. [!conSolarPanelToMotor(0)] X   %false
    % && (forall m, n: Nat. val(m>0&&m<=5&&n>0&&n<=5)=> ([true*. conSolarPanelToMotor(m). !(getSolarPower(0))*. getSolarPower(n)]false)) %false

%%%% 8 %%%%    %false   
    % && (forall a, b: Nat. val(a>=0&&a<=5&&b>=0&&b<=5&&a>b)=> ([true*. (getSolarPower(a)||pressThrottle(b))] mu X. [!conSolarPanelToMotor(b)]X))   % false
    % && (forall a, b: Nat. val(a>=0&&a<=5&&b>=0&&b<=5&&a>b)=> ([true*. (getBatteryLevel(Empty) || getBatteryLevel(Medium)&&getBatteryTemp(Normal)). !(getBatteryTemp(Overheating) &&  getBatteryLevel(Full))*.  (getSolarPower(a)||pressThrottle(b))] mu X. [!conSolarPanelToBattery(a-b)]X))  %false

%%%% 9 %%%%     %false
    % && (forall a, b: Nat. val(a>=0&&a<=5&&b>=0&&b<=5&&a<=b)=> ([true*. (getSolarPower(a)||pressThrottle(b))] mu X. [!conSolarPanelToMotor(a)]X))  %false
    % && (forall a, b: Nat. val(a>=0&&a<=5&&b>=0&&b<=5&&a<=b)=> ([true*. (getBatteryLevel(Empty)||getBatteryLevel(Medium)&&getBatteryTemp(Normal)). !(getBatteryTemp(Overheating)&&getBatteryLevel(Full))*.  (getSolarPower(a)||pressThrottle(b))] mu X. [!conBatteryToMotor(b-a)]X))   %false


%%%% 10 %%%%    %true
    % && (forall m, n: Nat. val(m>=0&&m<=5&&n>=0&&n<=5&&n>=m)=> ([true*. activateCruise(n). !(deactivateCruise). getSpeed(m)] mu X. [!setMotorRequirePower(n-m)]X))   %true
    % && (forall m, n: Nat. val(m>=0&&m<=5&&n>=0&&n<=5&&n<m)=> ([true*. activateCruise(n). !(deactivateCruise). getSpeed(m)] mu X. [!pressBrake]X))   %true


%%%% 11 %%%%    %error 
    % && (forall n: Nat. val(n>=0&&n<=5)=> ([true*. activateCruise(n). !(deactivateCruise)*. pressThrottle] mu X. [!(deactivateCruise)] X)) %error
    % && (forall n: Nat. val(n>=0&&n<=5)=> ([true*. activateCruise(n). !(deactivateCruise)*. pressBrake] mu X. [!(deactivateCruise)]X))     %false
    % && (forall n: Nat. val(n>=0&&n<=5)=> ([true*. activateCruise(n). !(deactivateCruise)*. pressOff] mu X. [!(deactivateCruise)]X))           %true
    % && (forall n: Nat. val(n>=0&&n<=5)=> ([true*. activateCruise(n). !(deactivateCruise)*. enterSafeMode] mu X. [!(deactivateCruise)]X))      %true

%%%% 12 %%%%    %true
    % && (forall n: BatteryLevelStatus. ([true*. getBatteryLevel(n)] mu X. [!sendBatteryLevel(n)] X))   %true
    % && (forall n: BatteryTempStatus. ([true*. getBatteryTemp(n)] mu X. [!sendBatteryTemp(n)] X))       %true
    % && (forall n: Nat. val(n>=0&&n<=5)=> ([true*. getSolarPower(n)] mu X. [!sendSolarPower(n)] X))     %true
    % && (forall n: Nat. val(n>=0&&n<=5)=> ([true*. getSpeed(n)] mu X. [!sendSpeed(n)] X))               %true
