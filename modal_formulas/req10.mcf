true
%%%% 10 %%%%	%true
%%%% a %%%%	%true
    && (forall desiredSpeed : Int . val(desiredSpeed >= 0 && desiredSpeed <= MAX) => ([true* . activateCruise(desiredSpeed)] mu X . ([!cruiseStep(0, desiredSpeed) && !deactivateCruise] X && <true>true)))

%%%% b %%%%	%true
	&& 	(
			nu X(speed : Int = 0) .
				([forall speed' : Int . !getSpeed(speed')] X(speed)) &&
				(forall speed' : Int . [getSpeed(speed')] X(speed')) &&
				(forall throttle : Int, desiredSpeed : Int . 

%%%% i %%%%		%true
					(val(throttle >= 0 && throttle < MAX && desiredSpeed - speed > SPEED_THRESHOLD) => 
						([cruiseStep(throttle, desiredSpeed)]  (mu Y . [!setMotorRequirePower(throttle + 1)] Y && <true> true)) && 
						([cruiseStep(throttle, desiredSpeed)]  (mu Y . [!cruiseStep(throttle + 1, desiredSpeed) && !deactivateCruise] Y && <true> true))) &&

%%%% ii %$%		%true
					(val(throttle > 0 && throttle <= MAX && speed - desiredSpeed > SPEED_THRESHOLD) =>
						([cruiseStep(throttle, desiredSpeed)]  (mu Y . [!setMotorRequirePower(throttle - 1)] Y && <true> true)) && 
						([cruiseStep(throttle, desiredSpeed)]  (mu Y . [!cruiseStep(throttle - 1, desiredSpeed) && !deactivateCruise] Y && <true> true))) &&

%%%% iii %%		%true
					(val(throttle >= 0 && throttle <= MAX && abs(speed - desiredSpeed) <= SPEED_THRESHOLD) =>

						([cruiseStep(throttle, desiredSpeed)]  (mu Y . [!setMotorRequirePower(throttle)] Y && <true> true)) && 
						([cruiseStep(throttle, desiredSpeed)]  (mu Y . [!cruiseStep(throttle, desiredSpeed) && !deactivateCruise] Y && <true> true)))
				)

		)
